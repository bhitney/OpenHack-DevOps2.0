name: POI CICD

env:
  poi_path: apis/poi/**
  registry: openhackr6a3ic71acr.azurecr.io
  repository: devopsoh/api-poi
  docker_path: apis/poi/web
  build_name: POI

on:
  push:
    branches: [ master ]
    paths:
    - apis/poi/**
    - .github/workflows/poi.yml
  pull_request:
    branches: [ master ]
    paths:
    - apis/poi/**
    - .github/workflows/poi.yml

jobs:
  build_and_test:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1

    - name: Install dependencies
      run: dotnet restore apis/poi/web/poi.csproj
      
    - name: Build with web project
      run: dotnet build apis/poi/web/poi.csproj --configuration Release
    
    - name: Build the unit test project
      run: dotnet build apis/poi/tests/UnitTests/UnitTests.csproj --configuration Release
    
    - name: Run the unit test
      run: dotnet test apis/poi/tests/UnitTests/UnitTests.csproj --configuration Release
      
    - if: ${{ failure() }} 
      name: Git Creation Demo
      uses: JasonEtco/create-an-issue@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: create-issue
    - run: 'echo Created issue number ${{ steps.create-issue.outputs.number }}'
    - run: 'echo Created ${{ steps.create-issue.outputs.url }}'
      
  docker_build_and_push:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:     
    - uses: actions/checkout@v2

    - name: Docker login     
      run: docker login $registry -u ${{ secrets.ACR_USER }} -p ${{ secrets.ACR_KEY }}

    - name: Docker build
      run: docker build -t $registry/$repository:${{github.run_number}} --build-arg build_version=${{github.run_number}} $docker_path

    - name: Docker Push
      run: docker push $registry/$repository:${{github.run_number}}  

    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
    - uses: azure/webapps-container-deploy@v1
      with:
        app-name: 'openhackr6a3ic71poi'
        images: '$registry/$repository:${{github.run_number}}'
